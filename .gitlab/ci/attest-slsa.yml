cosign-attest:
  image: golang:1.21
  stage: attest
  before_script:
    - echo "$COSIGN_PRIVATE_KEY" > cosign.key
  script:
    - curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
    - chmod +x cosign-linux-amd64 && mv cosign-linux-amd64 /usr/local/bin/cosign
    - |
      cat > slsa.json << EOF
      {
        "_type": "https://in-toto.io/Statement/v0.1",
        "subject": [
          {
            "name": "$DOCKER_IMAGE",
            "digest": {
              "sha256": "$(docker inspect $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA --format='{{index .RepoDigests 0}}' | cut -d '@' -f 2 | cut -d ':' -f 2)"
            }
          }
        ],
        "predicateType": "https://slsa.dev/provenance/v0.2",
        "predicate": {
          "builder": {
            "id": "https://gitlab.com/$CI_PROJECT_PATH/pipelines/$CI_PIPELINE_ID"
          },
          "buildType": "https://gitlab.com/buildType/docker",
          "invocation": {
            "configSource": {
              "uri": "git+https://gitlab.com/$CI_PROJECT_PATH.git",
              "digest": {
                "sha1": "$CI_COMMIT_SHA"
              },
              "entryPoint": ".gitlab-ci.yml"
            }
          },
          "metadata": {
            "buildStartedOn": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "buildFinishedOn": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "completeness": {
              "parameters": true,
              "environment": true,
              "materials": true
            }
          },
          "materials": [
            {
              "uri": "git+https://gitlab.com/$CI_PROJECT_PATH.git",
              "digest": {
                "sha1": "$CI_COMMIT_SHA"
              }
            }
          ]
        }
      }
      EOF
    - cosign attest --key cosign.key --predicate slsa.json --type slsaprovenance $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  after_script:
    - rm -f cosign.key slsa.json
  only:
    - main
    - tags
  needs:
    - dockerize
