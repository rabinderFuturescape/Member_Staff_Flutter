-- SQL Query for All Dues Report

SELECT 
    u.unit_no,
    m.name as member_name,
    mb.bill_cycle,
    mb.total_amount as bill_amount,
    IFNULL(p.total_paid, 0) as paid,
    (mb.total_amount - IFNULL(p.total_paid, 0)) as due,
    mb.due_date,
    p.last_payment
FROM member_bills mb
JOIN members m ON m.id = mb.member_id
JOIN units u ON u.id = m.unit_id
LEFT JOIN buildings b ON b.id = u.building_id
LEFT JOIN (
    SELECT member_id, SUM(amount_paid) as total_paid, MAX(payment_date) as last_payment
    FROM payments
    GROUP BY member_id
) p ON p.member_id = mb.member_id
WHERE DATE_FORMAT(mb.bill_cycle, '%Y-%m') = '2025-04'
AND b.name = 'A'

-- Controller Implementation

<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class CommitteeDuesReportController extends Controller
{
    public function index(Request $request)
    {
        $user = $request->user();
        if ($user->role !== 'committee') {
            return response()->json(['error' => 'Unauthorized'], 403);
        }

        $building = $request->query('building');
        $month = $request->query('month');

        $query = DB::table('member_bills as mb')
            ->join('members as m', 'm.id', '=', 'mb.member_id')
            ->join('units as u', 'u.id', '=', 'm.unit_id')
            ->leftJoin('buildings as b', 'b.id', '=', 'u.building_id')
            ->leftJoin(DB::raw('(
                SELECT receipt_id, member_id, SUM(amount_paid) as total_paid, MAX(payment_date) as last_payment
                FROM payments
                GROUP BY member_id
            ) as p'), 'p.member_id', '=', 'mb.member_id')
            ->select([
                'u.unit_no',
                'm.name as member_name',
                'mb.bill_cycle',
                'mb.total_amount as bill_amount',
                DB::raw('IFNULL(p.total_paid, 0) as paid'),
                DB::raw('(mb.total_amount - IFNULL(p.total_paid, 0)) as due'),
                'mb.due_date',
                'p.last_payment'
            ])
            ->whereRaw('DATE_FORMAT(mb.bill_cycle, "%Y-%m") = ?', [$month]);

        if ($building) {
            $query->where('b.name', $building);
        }

        $results = $query->paginate(25);
        return response()->json($results);
    }
}
